<?xml version="1.0" encoding="utf-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="uri:ea.com:eala:asset" xmlns:at="uri:ea.com:eala:asset:type" xmlns:xas="uri:ea.com:eala:asset:schema" targetNamespace="uri:ea.com:eala:asset" elementFormDefault="qualified" xmlns:XmlEdit="http://tempuri.org/XmlEdit.xsd">

	<xs:simpleType name="InvisibilityUpdateOptions">
		<xs:restriction base="xs:string">
			<xs:enumeration value="STARTS_ACTIVE"/>
			<xs:enumeration value="BROADCAST"/>
			<!-- Inverse is so that you can place an update on an object, and it will go invis
				if in range of something that passes the Broadcast filter.  Regular broadcast
				means the object with the update makes everything around it invisible (hence inverse) -->
			<xs:enumeration value="BROADCAST_INVERSE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="InvisibilityUpdateOptionsBitFlags">
		<xs:list itemType="InvisibilityUpdateOptions"/>
	</xs:simpleType>
	
	<xs:complexType name="InvisibilityUpdateModuleData">
		<xs:complexContent>
			<xs:extension base="UpdateModuleData">
				<xs:sequence>
					<xs:element name="InvisibilityNugget" type="InvisibilityNuggetType" minOccurs="1" maxOccurs="1" xas:byValue="true" />
					<xs:element name="BroadcastObjectFilter" type="ObjectFilter" minOccurs="0" />
					<xs:element name="RequiresUpgrade" type="UpgradeTemplateWeakRef" minOccurs="0" maxOccurs="1" />
				</xs:sequence>
				<xs:attribute name="Options" type="InvisibilityUpdateOptionsBitFlags" default=""/>
				<xs:attribute name="UpdatePeriod" type="Time" default="1s"/>
				<xs:attribute name="BroadcastRange" type="SageReal" default="0"/>
				<xs:attribute name="OpacityMin" type="Percentage" default="40%"/>
				<xs:attribute name="OpacityMax" type="Percentage" default="100%"/>
				<xs:attribute name="NamedVoiceNameToUseAsVoiceMoveToStealthyArea" type="StringHash" use="optional"/>
				<xs:attribute name="NamedVoiceNameToUseAsVoiceEnterStateMoveToStealthyArea" type="StringHash" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

</xs:schema>
