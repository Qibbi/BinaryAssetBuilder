<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="uri:ea.com:eala:asset" xmlns:at="uri:ea.com:eala:asset:type" xmlns:xas="uri:ea.com:eala:asset:schema" targetNamespace="uri:ea.com:eala:asset" elementFormDefault="qualified" xmlns:XmlEdit="uri:ea.com:eala:XmlEdit">

	<xs:complexType name="RGBColor">
		<xs:annotation>
			<xs:documentation>floating point RGB data</xs:documentation>
		</xs:annotation>
		<xs:attribute name="R"
									type="xs:float"
									use="required" />
		<xs:attribute name="G"
									type="xs:float"
									use="required" />
		<xs:attribute name="B"
									type="xs:float"
									use="required" />
	</xs:complexType>
	<xs:complexType name="RGBAColor">
		<xs:annotation>
			<xs:documentation>floating point RGBA data</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RGBColor">
				<xs:attribute name="A"
											type="xs:float"
											use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="Color3f">
		<xs:sequence></xs:sequence>
		<xs:attribute name="r" type="SageReal" />
		<xs:attribute name="g" type="SageReal" />
		<xs:attribute name="b" type="SageReal" />
	</xs:complexType>

	<xs:complexType name="Color4f">
		<xs:sequence></xs:sequence>
		<xs:attribute name="r" type="SageReal" />
		<xs:attribute name="g" type="SageReal" />
		<xs:attribute name="b" type="SageReal" />
		<xs:attribute name="a" type="SageReal" />
	</xs:complexType>
	
	<xs:simpleType name="AssetId">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="AssetIdList">
		<xs:list itemType="AssetId" />
	</xs:simpleType>

	<xs:simpleType name="SageUnsignedShort">
		<xs:restriction base="xs:string" >
			<xs:pattern value="(\d{1,5})|(=[_a-zA-Z]+)" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SageReal">
		<xs:restriction base="xs:string" >
			<xs:pattern value="((\+|\-)?((\.\d{1,16})|(\d{1,16}(\.\d{0,16})?))([eE](\+|\-)?\d{1,3})?)|(=[_a-zA-Z]+)"/>
		</xs:restriction>
	</xs:simpleType>


	<xs:simpleType name="SageInt">
		<xs:restriction base="xs:string" >
			<xs:pattern value="((\+|\-)?\d{1,10})|((0x)[A-Fa-f0-9]{8,8})|(=[_a-zA-Z]+)" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SageIntList" >
		<xs:list itemType="SageInt" />
	</xs:simpleType>

	<xs:simpleType name="UnsignedShortList">
		<xs:list itemType="xs:unsignedShort" />
	</xs:simpleType>

	<xs:simpleType name="FloatList">
		<xs:list itemType="xs:float" />
	</xs:simpleType>

	<xs:simpleType name="UnsignedByteList">
		<xs:list itemType="xs:unsignedByte" />
	</xs:simpleType>

	<xs:simpleType name="SageBool">
		<xs:restriction base="xs:string" >
			<xs:pattern value="([Ff]alse)|([Tt]rue)|0|1" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SageUnsignedInt">
		<xs:restriction base="xs:string" >
			<xs:pattern value="(\d{1,10})|(0x[0-9a-zA-Z]{1,8})|(0\.0)|(=[_a-zA-Z]+)" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SageUnsignedIntList">
		<xs:list itemType="SageUnsignedInt" />
	</xs:simpleType>
	
	<xs:simpleType name="SageDurationUnsignedInt">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Angle">
		<xs:restriction base="xs:string">
			<xs:pattern value="(((\+|\-)?((\.\d{1,16})|(\d{1,16}(\.\d{0,16})?))([eE](\+|\-)?\d{1,3})?)|(=[_a-zA-Z]+))(r|d)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="Percentage">
		<xs:restriction base="xs:string" xas:tag="PercentageTag">
			<xs:pattern value="((\+|\-)?((\.\d{1,16})|(\d{1,16}(\.\d{0,16})?))([%])?)|(=[_a-zA-Z]+)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PercentageList">
		<xs:list itemType="Percentage"/>
	</xs:simpleType>

	<xs:simpleType name="Time">
		<xs:restriction base="xs:string">
			<xs:pattern value="(((\+|\-)?((\.\d{1,16})|(\d{1,16}(\.\d{0,16})?))([eE](\+|\-)?\d{1,3})?)|(=[_a-zA-Z]+))(s|ms)"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="PositiveNonZeroReal">
		<xs:restriction base="SageReal" xas:tag="PositiveNonZeroRealTag" />
	</xs:simpleType>

	<xs:simpleType name="DurationUnsignedInt">
		<xs:restriction base="SageDurationUnsignedInt" xas:tag="DurationTag" />
	</xs:simpleType>

	<xs:simpleType name="Velocity">
		<xs:restriction base="SageReal" xas:tag="VelocityTag" />
	</xs:simpleType>

	<xs:complexType name="RealRange">
		<xs:attribute name="Low" type="SageReal" use="required"/>
		<xs:attribute name="High" type="SageReal" use="required"/>
	</xs:complexType>

	<xs:complexType name="IntRange">
		<xs:attribute name="Low" type="SageInt" use="required"/>
		<xs:attribute name="High" type="SageInt" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="Coord2D">
		<xs:sequence></xs:sequence>
		<xs:attribute name="x" type="SageReal" default="0.0" />
		<xs:attribute name="y" type="SageReal" default="0.0" />
	</xs:complexType>
	
	<xs:complexType name="ICoord2D">
		<xs:sequence></xs:sequence>
		<xs:attribute name="x" type="SageInt" default="0" />
		<xs:attribute name="y" type="SageInt" default="0" />
	</xs:complexType>

	<xs:complexType name="Coord3D">
		<xs:sequence></xs:sequence>
		<xs:attribute name="x" type="SageReal" default="0.0" />
		<xs:attribute name="y" type="SageReal" default="0.0" />
		<xs:attribute name="z" type="SageReal" default="0.0" />
	</xs:complexType>
	
	<xs:complexType name="Color3" xas:byValue="true">
		<xs:sequence></xs:sequence>
		<xs:attribute name="R" type="xs:unsignedByte" />
		<xs:attribute name="G" type="xs:unsignedByte" />
		<xs:attribute name="B" type="xs:unsignedByte" />
	</xs:complexType>

	<xs:complexType name="Color4" xas:byValue="true">
		<xs:sequence></xs:sequence>
		<xs:attribute name="R" type="xs:unsignedByte" />
		<xs:attribute name="G" type="xs:unsignedByte" />
		<xs:attribute name="B" type="xs:unsignedByte" />
		<xs:attribute name="A" type="xs:unsignedByte" />
	</xs:complexType>

	<xs:simpleType name="DistributionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CONSTANT" />
			<xs:enumeration value="UNIFORM" />
			<xs:enumeration value="GAUSSIAN" />
			<xs:enumeration value="TRIANGULAR" />
			<xs:enumeration value="LOW_BIAS" />
			<xs:enumeration value="HIGH_BIAS" />
		</xs:restriction>
	</xs:simpleType> 
	
	<xs:complexType name="RandomVariable">
		<xs:sequence></xs:sequence>
		<xs:attribute name="Type" type="DistributionType" default="UNIFORM" />
		<xs:attribute name="Low" type="SageReal" />
		<xs:attribute name="High" type="SageReal" />
	</xs:complexType>

	<xs:complexType name="LogicRandomVariable">
		<xs:annotation>
			<xs:appinfo source="../GameData.xsd">
				<GameData xmlns="uri:ea.com:eala:asset:gamedata">
					<Function name="GetValue"
										return="Real" />
				</GameData>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RandomVariable">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ClientRandomVariable">
		<xs:annotation>
			<xs:appinfo source="../GameData.xsd">
				<GameData xmlns="uri:ea.com:eala:asset:gamedata">
					<Function name="GetValue"
										return="Real" />
				</GameData>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RandomVariable">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="Script">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="WideString">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="StringList">
		<xs:list itemType="xs:token" />
	</xs:simpleType>

	<xs:simpleType name="StickyString">
		<xs:restriction base="xs:string" xas:tag="StickyStringTag" />
	</xs:simpleType>

	<xs:complexType name="ReplaceTexture">
		<xs:sequence></xs:sequence>
		<xs:attribute name="Original" type="TextureRef" />
		<xs:attribute name="New" type="TextureRef" />
	</xs:complexType>

	<!--TODO: These need to be assets!-->
	<xs:simpleType name="AudioEventInfoRef" xas:isRef="true" xas:refType="BaseAudioEventInfo" >
		<xs:restriction base="AssetReference" />
	</xs:simpleType>
	<xs:simpleType name="AudioEventInfoRefList"  >
		<xs:list itemType="xs:string" /> <!-- Should be AudioEventInfoRef but the compiler chokes ?!? "Error: AudioEventInfoRefList List is of reference type but contains no extended type information." -->
	</xs:simpleType>
	
	<xs:simpleType name="EvaEventIDType">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	
	
	<!-- This is the type of Object-level voices (e.g. VoiceAttack). It is normally a sound reference, but
	     it can also be a Eva event reference, or both, because some units (especially those that can't 
	     talk) use Eva events in place of a few voice responses.  --> 
	<xs:complexType name="SoundOrEvaEvent" >
		<xs:sequence></xs:sequence>
		<xs:attribute name="Sound" type="AudioEventInfoRef" use="optional" />
		<xs:attribute name="EvaEvent" type="EvaEventIDType" use="optional" />
	</xs:complexType>

	<xs:simpleType name="EmotionNuggetTemplate">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="StringHash">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="FontFamily">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="LargeGroupAudioKeyList">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

</xs:schema>
